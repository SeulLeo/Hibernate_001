<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<!--  id:配置实体与表中id对应
name:user对象中标识主键的属性名称
column:主键在表中的列名
 -->
<hibernate-mapping package="com.zk.myHibernate">
    <class name="com.zk.myHibernate.Student" table="student" dynamic-insert="true" catalog="student">
        <id name="sno" type="java.lang.Integer">
        <!-- 
        generator:主键生成策略
        native:由数据库维护主键(数据库中的配置主键自增)
        1.increment 数据库自己生成主键，先从数据库中查询最大的ID值，将ID值加1作为新的主键
        2.identity 依赖于数据的主键自增功能
        3.sequence 序列，依赖与数据中的序列功能(Oracle)
        4.hilo (纯了解，永远用不到)
        5.native 自动根据数据库判断，三选一，identity|sequence|hilo
        6.uuid 生成32位的不重复随机字符串当做主键
        7.assigned 自己指定主键值
         -->
            <column name="Sno" />
            <!--  <generator class="assigned" />-->
            <generator class="increment"></generator>
        </id>
        <!-- property:实体中属性与表中列相对应
        name:user对象中标识主键的属性名称
        column:主键在表中的列名
        length:列的数据长度
        unsaved-value(不推荐):制定主键为什么值时，当做null来处理
        access(强烈推荐不要用):field
        precision:小数点后的精度
        scale:有效位数
        insert:该属性是否加入insert语句(一般不用) true/false
        update:该属性是否加入update语句(一般不用) true/false
        not-null:指定属性值是否使用非空 true/false
        unique:指定属性的约束是否使用唯一 true/false
        type：表达属性的类型可以用三种方式指定属性 java类型|数据库类型|hibernate类型
        type="java.lang.String/varchar/string"
         -->
        <property name="sname" type="java.lang.String">
            <column name="Sname" length="10" />
        </property>
        <property name="sgrade" type="java.lang.Integer">
            <column name="Sgrade" />
        </property>
    </class>
</hibernate-mapping>
